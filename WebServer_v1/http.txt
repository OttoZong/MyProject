瀏覽器與服務器之間底層的連結協議是TCP協議.
而上層負責具體數據傳輸的格式使用的應用協議為HTTP

HTTP協議有兩種版本:1.0 , 1.1
現在基本維持1.1協議.

客戶端與服務端之間使用HTTP協議時規定:一次請求一次響應.
服務端永遠不會主動發起請求.
總是客戶端發起請求,服務端處理有進行響應.

1.0版本時:一次TCP連結後,一次請求一次響應完畢即斷開連結.
1.1版本時:一次TCP連結後,可以進行多次請求與響應後斷開連結.
1.1版本的這個改動可以降低資源開銷,提高響應效率.

HTTP協議規定了客戶端發送給服務端的[請求]格式.
以及服務端發送回給客戶端的[響應]格式.

請求(Request):
請求分為三部組成:
請求行,消息頭,消息正文

請求行:
請求行由三部分組成,格式為:
method uri protocolCRLF
請求方法	資源路徑	協議版本CRLF
CR:回車,對應的ASC編碼為13
LF:換行,對應的ASC編碼為10
CRLF標誌著請求行結束.

消息頭:
消息頭的格式為:
name:valueCRLF
名子:值CRLF

消息頭由若干個name:value組成,每一個都以CRLF結尾.
消息頭是客戶端發送的請求中的附帶信息.
具體的名子和對應的值都在HTTP協議中有規定,都含有具體的意義.
當所有的消息頭都發送完畢後,會再附帶一個單獨的CRLF,表示所有消息頭發送完畢,
格式類似下面:
name1:value1CRLF
name2:value2CRLF
....
namen:valueCRLFCRLF
可以看出,最後一個頭信息發送完畢後,會有兩個CRLF,而第二個就表示所有的消息頭都發送完畢.

//HTTP權威指南

消息正文:
消息正文是二進制數據,消息正文不是以CRLF結尾,而是具體的字節量是通過一個頭信息標註的.
該頭的名子是Content-Length
例如:
Content-Length:325
通過解析這個頭可以得知,消息正文有350個字節.

而這些字節具體表示什麼類型的數據由另一個頭,
標註:Content-Type

如果請求中的頭信息裡不包含有Content-Length,說明這個請求中不包含消息正文內容.

一個標準的HTTP請求格式:
GET / HTTP/1.1CRLF
Host: localhost:8080CRLF
Connection: keep-aliveCRLF
Cache-Control: max-age=0CRLF
Save-Data: onCRLF
Upgrade-Insecure-Requests: 1CRLF
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36CRLF
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8CRLF
Accept-Encoding: gzip, deflate, brCRLF
Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6CRLFCRLF


GET /index.html HTTP/1.1CRLF	請求行
Content-Type:text/htmlCRLF		消息頭
Content-Length:23CRLF
....
xxx:xxxxxxCRLFCRLF
10100010101010101110			消息正文


響應(Response):



